name: Deploy and Release
on:
  push:
    tags:
      - "*"

jobs:
  deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      SECRET: ${{ secrets.SECRET }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Get local node modules directory path
        id: yarn-node-modules-path
        run: echo "::set-output name=dir::$(pwd)/node_modules"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ${{ steps.yarn-node-modules-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn

      - name: Build app
        run: yarn build

      - name: Run migration before deploy
        run: yarn migration:run

      # because netlify cli can't deploy without publish folder, so just create dummy folder for workaround
      - run: mkdir public

      - name: Deploy to netlify
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: |
            deploy --prod --dir=public --functions=funcs

  release:
    needs: deploy
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Release tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: New release, yay!